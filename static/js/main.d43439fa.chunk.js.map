{"version":3,"sources":["components/NoteText/NoteText.module.css","components/BoxItem/BoxItem.module.css","components/ThreeDotsMenu/ThreeDotsMenu.module.css","components/StorageBoxesContainer/StorageBoxesContainer.module.css","components/ContentSelector/ContentSelector.module.css","components/NewBoxPopUp/NewBoxPopUp.module.css","components/AddText/addText.module.css","components/WelcomeHeader/WelcomeHeader.module.css","components/TestingInitLocalStorage/Testing.module.css","components/DeleteBoxPopUp/DeleteBoxPopUp.module.css","components/BoxTitle/BoxTitle.module.css","components/WelcomeHeader/index.js","hooks/dbFunctions.js","components/NewBoxPopUp/index.js","components/ContentSelector/index.js","components/AddText/index.js","components/NoteText/index.js","components/DeleteBoxPopUp/index.js","components/ThreeDotsMenu/index.js","components/BoxTitle/index.js","components/BoxItem/index.js","components/StorageBoxesContainer/index.js","pages/Home/index.js","App.js","index.js"],"names":["module","exports","WelcomeHeader","className","CSS","container","text","returnUniqueNum","arrayOfIds","range","length","sort","a","b","i","startNum","error","console","log","NewBoxPopUp","onExitPopUp","onCreate","useState","title","setTitle","NewBoxPopUpCSS","popupExit","onClick","onChange","e","event","value","target","handledChange","placeholder","createBtn","informationString","localStorage","getItem","informationParsed","JSON","parse","newArray","boxId","content","setItem","stringify","newBox","map","box","push","addToDB","ContentSelector","createHeader","createText","cancelBtn","ContentSelectorCSS","btn","AddText","handleSave","contentType","closeBtn","textarea","setTextareaState","addTextCSS","defaultValue","handleInput","updatedArray","id","note","noteId","header","updateDB","NoteText","unRender","updateTitle","elementState","textState","setTextState","editorElements","setEditorElements","editingText","setEditingText","setEditorHeight","editorClass","useRef","editorRef","textAreaRef","textRef","useEffect","current","NoteTextCSS","editingTextarea","editingHeading","hidden","buildEditorTxt","pTag","elementLayout","split","element","ref","pTagContainer","hTag","headingTag","splitArray","htmlElements","line","classList","contentChecker","contentEditable","suppressContentEditableWarning","onInput","innerText","stopPropagation","window","confirm","clientHeight","updatedText","updatedNotes","filter","DeleteBoxPopUp","DelPopUpCSS","item","ThreeDotsMenu","onDel","isOpen","setIsOpen","ThreeDotsCSS","dot1","dots","dot2","dot3","BoxTitle","children","BoxTitleCSS","BoxItem","deleteBox","BoxItemCSS","storageBox","setClassList","boxState","setBoxState","newComponent","setNewComponentState","workingContentArray","setWorkingContentArray","noteTextBuilder","handleSelectorCancel","notes","deleteFromArray","deleteId","newContentArray","state","storageBoxOpen","newTitle","prevState","contentContainer","newNoteContent","StorageBoxesContainer","boxesState","setBoxesState","boxesComponentState","setBoxesComponentState","renderAddNewPopUp","setRenderAddNewPopUp","setStorageBoxes","getComponents","components","handleBoxDelete","handleExitPopUp","array","delBoxId","updatedStorageBoxes","StorageBoxesContainerCSS","plus","verticalLine","horizontalLine","Home","App","component","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d43439fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NoteText_container__12p5y\",\"editingTextarea\":\"NoteText_editingTextarea__15-XJ\",\"editingHeading\":\"NoteText_editingHeading__3g_4J\",\"btn\":\"NoteText_btn__2kuZ-\",\"pTagContainer\":\"NoteText_pTagContainer__3rAj8\",\"pTag\":\"NoteText_pTag__2HSqE\",\"headingTag\":\"NoteText_headingTag__1XIH2\",\"hidden\":\"NoteText_hidden__1TKmE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"storageBox\":\"BoxItem_storageBox__zKccM\",\"storageBoxOpen\":\"BoxItem_storageBoxOpen__2VSCL\",\"contentContainer\":\"BoxItem_contentContainer__Kx3f2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ThreeDotsMenu_container__28uh3\",\"dots\":\"ThreeDotsMenu_dots__3tc6A\",\"dot1\":\"ThreeDotsMenu_dot1__2pOCw\",\"dot2\":\"ThreeDotsMenu_dot2__3v8jb\",\"dot3\":\"ThreeDotsMenu_dot3__3xFec\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StorageBoxesContainer_container__3qLn9\",\"btn\":\"StorageBoxesContainer_btn__1cAix\",\"plus\":\"StorageBoxesContainer_plus__1Bd4u\",\"verticalLine\":\"StorageBoxesContainer_verticalLine__7PvI3\",\"horizontalLine\":\"StorageBoxesContainer_horizontalLine__2_-SL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContentSelector_container__1kS6F\",\"btn\":\"ContentSelector_btn__rzjdQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NewBoxPopUp_container__1kQhD\",\"popupExit\":\"NewBoxPopUp_popupExit__252XB\",\"createBtn\":\"NewBoxPopUp_createBtn__HfHZT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"addText_container__3bYYy\",\"btn\":\"addText_btn__2LYw1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WelcomeHeader_container__1rSDt\",\"gradient\":\"WelcomeHeader_gradient__2ifj-\",\"text\":\"WelcomeHeader_text__kUDCp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Testing_text__2E41j\",\"explaination\":\"Testing_explaination__3eyU6\",\"render_box\":\"Testing_render_box__3WBRt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DeleteBoxPopUp_container__2hT9b\",\"item\":\"DeleteBoxPopUp_item__3KJgn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"BoxTitle_title__1wr8M\"};","import React from \"react\";\r\nimport CSS from \"./WelcomeHeader.module.css\";\r\n\r\nexport default function WelcomeHeader() {\r\n  return (\r\n    <div className={CSS.container}>\r\n      <h1 className={CSS.text}>Jot Freely</h1>\r\n    </div>\r\n  );\r\n}\r\n","export function returnUniqueNum(arrayOfIds) {\r\n  //Argument take a max range and an array\r\n  let range = arrayOfIds.length;\r\n\r\n  if (range === 0) {\r\n    return 0;\r\n  }\r\n\r\n  //Sort the array\r\n  // console.log(\"Before Sort\",arrayOfIds)\r\n  arrayOfIds.sort(function (a, b) {\r\n    return a - b;\r\n  });\r\n  // console.log(\"After Sort\",arrayOfIds);\r\n\r\n  try {\r\n    for (let i = 0; i < range; i++) {\r\n      // console.log(arrayOfIds[i]);\r\n      //The first in check Num\r\n      const startNum = arrayOfIds[i] + 1;\r\n      if (arrayOfIds[0] === 1) {\r\n        return 0;\r\n      }\r\n      //The num we are checking against\r\n      const nextNum = arrayOfIds[i + 1];\r\n      if (startNum !== nextNum) {\r\n        return startNum;\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\n//AddOne to Db\r\n//Delete one to Db\r\n//Update one in db\r\n","import React, { useState } from \"react\";\r\nimport { returnUniqueNum } from \"../../hooks/dbFunctions\";\r\nimport NewBoxPopUpCSS from \"./NewBoxPopUp.module.css\";\r\n\r\nexport default function NewBoxPopUp({ onExitPopUp, onCreate }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  //Update State\r\n  const handledChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    setTitle(value);\r\n  };\r\n\r\n  //Read and Edit Json as of Now but in future Google docs and then Mongo or MySQL\r\n  const addToDB = () => {\r\n    const informationString = localStorage.getItem(\"StorageBoxes\");\r\n    const informationParsed = JSON.parse(informationString);\r\n\r\n    //Gets the id of last item stored in local Storage -- Temporary --\r\n    // console.log(\"information parsed\", informationParsed.boxId);\r\n    //If localStorage empty\r\n    if (informationParsed === null) {\r\n      const newID = 0;\r\n      const newArray = [{ boxId: newID, title: title, content: [] }];\r\n      localStorage.setItem(\"StorageBoxes\", JSON.stringify(newArray));\r\n    } else {\r\n      //Else local storage exists\r\n      const idArray = informationParsed.map((box) => {\r\n        return box.boxId;\r\n      });\r\n      const newID = returnUniqueNum(idArray);\r\n\r\n      //New Box/List Item\r\n      // console.log(newID);\r\n      const newBox = { boxId: newID, title: title, content: [] };\r\n      \r\n      informationParsed.push(newBox);\r\n      //Send back to localStorage\r\n      localStorage.setItem(\"StorageBoxes\", JSON.stringify(informationParsed));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={NewBoxPopUpCSS.container}>\r\n      <button className={NewBoxPopUpCSS.popupExit} onClick={onExitPopUp}>\r\n        X\r\n      </button>\r\n      <input\r\n        onChange={(e) => {\r\n          handledChange(e);\r\n        }}\r\n        placeholder=\"Title\"\r\n      ></input>\r\n      <button\r\n        className={NewBoxPopUpCSS.createBtn}\r\n        onClick={() => {\r\n          addToDB();\r\n          onCreate();\r\n        }}\r\n      >\r\n        <p>Create New Box</p>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ContentSelectorCSS from \"./ContentSelector.module.css\";\r\n\r\nexport default function ContentSelector({\r\n  createHeader,\r\n  createText,\r\n  cancelBtn,\r\n}) {\r\n  return (\r\n    <div className={ContentSelectorCSS.container}>\r\n      <button onClick={createHeader} className={ContentSelectorCSS.btn}>\r\n        H\r\n      </button>\r\n      <button onClick={createText} className={ContentSelectorCSS.btn}>\r\n        T\r\n      </button>\r\n      <button onClick={cancelBtn} className={ContentSelectorCSS.btn}>\r\n        X\r\n      </button>\r\n      {/* <div className={ContentSelectorCSS.headerBtn}></div> */}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport addTextCSS from \"./addText.module.css\";\r\nimport { returnUniqueNum } from \"../../hooks/dbFunctions\";\r\n\r\nexport default function AddText({\r\n  boxId,\r\n  handleSave,\r\n  contentType,\r\n  text,\r\n  closeBtn,\r\n}) {\r\n  const [textarea, setTextareaState] = useState(text);\r\n\r\n\r\n  const handleInput = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    setTextareaState(value);\r\n  };\r\n\r\n  //Take text area and add to contents array\r\n  const updateDB = () => {\r\n    //Get INformation from db\r\n    const storageBoxes = JSON.parse(localStorage.getItem(\"StorageBoxes\"));\r\n    // console.log(\"StorageBoxes\", storageBoxes);\r\n    //Finds the note we are looking for then checks what type we are adding\r\n    const updatedArray = storageBoxes.map((box) => {\r\n      //If the current box we are in matches the current box in loop\r\n      if (box.boxId === boxId) {\r\n        //Build Id of notes\r\n        const noteIdArray = box.content.map((note) => {\r\n          return note.noteId;\r\n        });\r\n        // console.log(\"noteIdArray: \", noteIdArray);\r\n\r\n        const id = returnUniqueNum(noteIdArray);\r\n        \r\n        //pass child to parent \\[textarea, id]\r\n        //\r\n        handleSave({\"noteId\":id,\"text\":textarea});\r\n\r\n        if (contentType === \"heading\") {\r\n          box.content.push({ noteId: id, header: textarea });\r\n        } else if (contentType === \"text\") {\r\n          box.content.push({ noteId: id, text: textarea });\r\n        }\r\n      }\r\n\r\n      return box;\r\n    });\r\n\r\n    localStorage.setItem(\"StorageBoxes\", JSON.stringify(updatedArray));\r\n  };\r\n\r\n  //Click\r\n  const handleClick = () => {\r\n    updateDB();\r\n  };\r\n  return (\r\n    <div className={addTextCSS.container}>\r\n      <textarea\r\n        defaultValue={textarea}\r\n        onChange={(e) => {\r\n          handleInput(e);\r\n        }}\r\n      ></textarea>\r\n      <button onClick={handleClick} className={addTextCSS.btn}>\r\n        Save\r\n      </button>\r\n      <button onClick={closeBtn} className={addTextCSS.btn}>\r\n        X\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport NoteTextCSS from \"./NoteText.module.css\";\r\n\r\nexport default function NoteText({\r\n  content,\r\n  contentType,\r\n  unRender,\r\n  updateTitle,\r\n}) {\r\n  const [elementState, setElementState] = useState(contentType);\r\n  const [textState, setTextState] = useState(content.text);\r\n  const [editorElements, setEditorElements] = useState([]);\r\n  const [editingText, setEditingText] = useState(content.text);\r\n  const [editorHeight, setEditorHeight] = useState();\r\n  let editorClass = useRef();\r\n  const editorRef = useRef();\r\n  const textAreaRef = useRef();\r\n  const textRef = useRef();\r\n  const currentScrollHeight = useRef(0);\r\n\r\n  useEffect(() => {\r\n    //Init Header or Text for note box\r\n\r\n    if (contentType === \"text\") {\r\n      editorClass.current = NoteTextCSS.editingTextarea;\r\n    } else if (contentType === \"heading\" || contentType === \"title\") {\r\n      editorClass.current = NoteTextCSS.editingHeading;\r\n    }\r\n\r\n    // setEditorHeight(textReft);\r\n    editorRef.current.className = NoteTextCSS.hidden;\r\n    buildEditorTxt();\r\n  }, []);\r\n\r\n  const contentChecker = () => {\r\n    //switch statement would work better i think\r\n    if (elementState === \"editor\") {\r\n      return;\r\n    } else if (elementState === \"heading\") {\r\n      return hTag;\r\n    } else if (elementState === \"text\") {\r\n      return pTag();\r\n    } else if (elementState === \"title\") {\r\n      return title;\r\n    }\r\n  };\r\n\r\n  //\r\n  const handleSave = (updatedText) => {\r\n    setTextState(updatedText);\r\n    //Get INformation from db\r\n    const storageBoxes = JSON.parse(localStorage.getItem(\"StorageBoxes\"));\r\n    //Finds the note we are looking for then checks what type we are adding\r\n    const updatedArray = storageBoxes.map((box) => {\r\n      //If the current box we are in matches the current box in loop\r\n      if (box.boxId === content.boxId) {\r\n        //If its the title element\r\n        if (contentType === \"title\") {\r\n          //change title to what was edited\r\n          box.title = updatedText;\r\n          // console.log(\"box\", box);\r\n          //return box to the array\r\n          return box;\r\n        } else {\r\n          const updatedNotes = box.content.map((note) => {\r\n            if (note.noteId === content.noteId) {\r\n              if (contentType === \"heading\") {\r\n                return { noteId: content.noteId, header: updatedText };\r\n              } else if (contentType === \"text\") {\r\n                return { noteId: content.noteId, text: updatedText };\r\n              }\r\n            } else {\r\n              return note;\r\n            }\r\n          });\r\n          box.content = updatedNotes;\r\n        }\r\n        //Build Id of notes\r\n      }\r\n      return box;\r\n    });\r\n    localStorage.setItem(\"StorageBoxes\", JSON.stringify(updatedArray));\r\n    // setElementState(<p>{updatedText}</p>);\r\n  };\r\n\r\n  // Handle Item Click For Editing a box\r\n  const handleClick = () => {\r\n    editorRef.current.classList = \"\";\r\n    textRef.current.className = NoteTextCSS.hidden;\r\n  };\r\n\r\n\r\n  const pTag = () => {\r\n    // console.log(content.noteId)\r\n    let array = textState.split(\"\\n\");\r\n\r\n    const elementLayout = array.map((element, i) => {\r\n      return (\r\n        <p className={NoteTextCSS.pTag} key={i}>\r\n          {element}\r\n        </p>\r\n      );\r\n    });\r\n    return (\r\n      <div ref={textRef} className={NoteTextCSS.pTagContainer}>\r\n        {elementLayout}\r\n      </div>\r\n    );\r\n    // return <p className={NoteTextCSS.text}> {textState}</p>;\r\n  };\r\n  const hTag = (\r\n    <h2 ref={textRef} className={NoteTextCSS.headingTag}>\r\n      {textState}\r\n    </h2>\r\n  );\r\n\r\n  const title = (\r\n    <h1 ref={textRef} className={NoteTextCSS.title}>\r\n      {textState}\r\n    </h1>\r\n  );\r\n\r\n  const handleDelete = () => {\r\n    //Definitaly not dry but you get the point ok\r\n    //Get INformation from db\r\n    const storageBoxes = JSON.parse(localStorage.getItem(\"StorageBoxes\"));\r\n\r\n    //Finds the note we are looking for then checks what type we are adding\r\n    const updatedArray = storageBoxes.map((box) => {\r\n      //If the current box we are in matches the current box in loop\r\n\r\n      if (box.boxId === content.boxId) {\r\n        //If its the title element\r\n        const updatedNotes = box.content.filter((note) => {\r\n          if (note.noteId === content.noteId) {\r\n            return;\r\n          } else {\r\n            return note;\r\n          }\r\n        });\r\n        box.content = updatedNotes;\r\n\r\n        //Build Id of notes\r\n      }\r\n      return box;\r\n    });\r\n\r\n    localStorage.setItem(\"StorageBoxes\", JSON.stringify(updatedArray));\r\n    unRender(content.noteId);\r\n  };\r\n\r\n  //Formats the editable p tag so it matches the acutal p tags\r\n  const buildEditorTxt = () => {\r\n    console.log(textState);\r\n    let splitArray = textState.split(\"\\n\");\r\n    console.log(\"splitArray\", splitArray);\r\n    const htmlElements = splitArray.map((line, i) => {\r\n      return <div key={i}>{line}</div>;\r\n    });\r\n    setEditorElements(htmlElements);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div onClick={handleClick} className={NoteTextCSS.container}>\r\n        {contentChecker()}\r\n\r\n        <div ref={editorRef}>\r\n          <p>Editing</p>\r\n          <div\r\n            id={`note-${content.noteId}`}\r\n            ref={textAreaRef}\r\n            contentEditable={true}\r\n            suppressContentEditableWarning={true}\r\n            className={`${editorClass.current}`}\r\n            onInput={() => {\r\n              setEditingText(textAreaRef.current.innerText);\r\n            }}\r\n          >\r\n            {editorElements}\r\n          </div>\r\n          <br />\r\n          <button\r\n            className={NoteTextCSS.btn}\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              if (editingText !== textState) {\r\n                let answer = window.confirm(\r\n                  \"You didnt save are you sure you want to close the editor without saving??\"\r\n                );\r\n                if (answer) {\r\n                  editorRef.current.className = NoteTextCSS.hidden;\r\n                  textRef.current.className = \"\";\r\n                  setEditingText(textState);\r\n                  setEditorHeight(textRef.current.clientHeight);\r\n                } else {\r\n                }\r\n              } else {\r\n                editorRef.current.className = NoteTextCSS.hidden;\r\n                textRef.current.className = \"\";\r\n                setEditorHeight(textRef.current.clientHeight);\r\n              }\r\n            }}\r\n          >\r\n            Close Editor\r\n          </button>\r\n          <button\r\n            className={NoteTextCSS.btn}\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              handleSave(textAreaRef.current.innerText);\r\n              if (contentType === \"title\") {\r\n                updateTitle(editingText);\r\n              }\r\n            }}\r\n          >\r\n            Save\r\n          </button>\r\n          {contentType !== \"title\" && (\r\n            <button onClick={handleDelete} className={NoteTextCSS.btn}>\r\n              Delete\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport DelPopUpCSS from \"./DeleteBoxPopUp.module.css\";\r\n\r\nexport default function DeleteBoxPopUp({onClick}) {\r\n  return (\r\n    <div\r\n      onClick={(e) => {\r\n        e.stopPropagation();\r\n        onClick()\r\n      }}\r\n      className={DelPopUpCSS.container}\r\n    >\r\n      <p className={DelPopUpCSS.item}>Delete Box</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport ThreeDotsCSS from \"../ThreeDotsMenu/ThreeDotsMenu.module.css\";\r\nimport DeleteBoxPopUp from \"../DeleteBoxPopUp\";\r\n\r\nexport default function ThreeDotsMenu({ onDel }) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  return (\r\n    <>\r\n      {isOpen && <DeleteBoxPopUp onClick={onDel} />}\r\n      <div\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          if (isOpen) {\r\n            setIsOpen(false);\r\n          } else {\r\n            setIsOpen(true);\r\n          }\r\n\r\n          // onClick();\r\n        }}\r\n        className={ThreeDotsCSS.container}\r\n      >\r\n        <div className={`${ThreeDotsCSS.dot1} ${ThreeDotsCSS.dots}`}>.</div>\r\n        <div className={`${ThreeDotsCSS.dot2} ${ThreeDotsCSS.dots}`}>.</div>\r\n        <div className={`${ThreeDotsCSS.dot3} ${ThreeDotsCSS.dots}`}>.</div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport BoxTitleCSS from \"./BoxTitle.module.css\";\r\n\r\nexport default function BoxTitle({ children, ref }) {\r\n  return <p className={BoxTitleCSS.title}>{children}</p>;\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport BoxItemCSS from \"../BoxItem/BoxItem.module.css\";\r\nimport ContentSelector from \"../ContentSelector\";\r\nimport AddText from \"../AddText\";\r\nimport NoteText from \"../NoteText\";\r\nimport ThreeDotsMenu from \"../ThreeDotsMenu\";\r\nimport BoxTitle from \"../BoxTitle\";\r\n\r\n// Single Stored Box that contains a collection of\r\n//info consists of the Text Headings and Title of each Box Stored\r\nexport default function BoxItem({ content, deleteBox }) {\r\n  const [classList, setClassList] = useState(`${BoxItemCSS.storageBox}`);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [boxState, setBoxState] = useState(content);\r\n  const [newComponent, setNewComponentState] = useState();\r\n  const [workingContentArray, setWorkingContentArray] = useState([]);\r\n\r\n  useEffect(() => {\r\n    noteTextBuilder();\r\n  }, [boxState]);\r\n  //Handles Open for Box clicked\r\n  const handleClick = () => {\r\n    //If box is closed Open It\r\n    if (isOpen) return;\r\n\r\n    setClassList(`${BoxItemCSS.storageBox} ${BoxItemCSS.storageBoxOpen}`);\r\n    setIsOpen(true);\r\n    noteTextBuilder();\r\n\r\n    //If box is able to be opened and is open\r\n  };\r\n\r\n  const handleExit = () => {\r\n    if (isOpen) {\r\n      setClassList(`${BoxItemCSS.storageBox} `);\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  //On Submit of new Header Element from the Content Selector Component\r\n  const handleHeadingBtn = () => {\r\n    setNewComponentState(\r\n      <AddText\r\n        contentType={\"heading\"}\r\n        boxId={content.boxId}\r\n        handleSave={(newNoteContent) => {\r\n          const newContentArray = boxState.content;\r\n          newContentArray.push({\r\n            noteId: newNoteContent.noteId,\r\n            header: newNoteContent.text,\r\n          });\r\n          setBoxState((state) => ({\r\n            ...state,\r\n            content: newContentArray,\r\n          }));\r\n          handleSelectorCancel();\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  //On Submit of new Text element\r\n  const handleTextBtn = () => {\r\n    setNewComponentState(\r\n      <AddText\r\n        contentType={\"text\"}\r\n        boxId={content.boxId}\r\n        handleSave={(newNoteContent) => {\r\n          const newContentArray = boxState.content;\r\n          newContentArray.push({\r\n            noteId: newNoteContent.noteId,\r\n            text: newNoteContent.text,\r\n          });\r\n          setBoxState((state) => ({\r\n            ...state,\r\n            content: newContentArray,\r\n          }));\r\n          handleSelectorCancel();\r\n          console.log(\"Save btn End\");\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleSelectorCancel = () => {\r\n    setNewComponentState(null);\r\n  };\r\n\r\n  //\r\n  const noteTextBuilder = () => {\r\n    if (boxState.content) {\r\n      const notes = boxState.content.map((note) => {\r\n        let contentType = \"\";\r\n        let text = \"\";\r\n        if (note.header) {\r\n          contentType = \"heading\";\r\n          text = note.header;\r\n        } else if (note.text) {\r\n          contentType = \"text\";\r\n          text = note.text;\r\n        }\r\n        return (\r\n          <NoteText\r\n            id={`box-${boxState.boxId}-note-${note.noteId}`}\r\n            key={note.noteId}\r\n            contentType={contentType}\r\n            content={{\r\n              text: text,\r\n              boxId: boxState.boxId,\r\n              noteId: note.noteId,\r\n            }}\r\n            unRender={deleteFromArray}\r\n          />\r\n        );\r\n      });\r\n\r\n      setWorkingContentArray(notes);\r\n    }\r\n  };\r\n\r\n  const deleteFromArray = (deleteId) => {\r\n    //When a note hits a delete button loop through content array and remove that note\r\n\r\n    const newContentArray = boxState.content.filter((note) => {\r\n      console.log(note.noteId);\r\n      if (note.noteId === deleteId) {\r\n        return;\r\n      } else {\r\n        return note;\r\n      }\r\n    });\r\n    //This updates the content state array with new and old information\r\n    setBoxState((state) => ({\r\n      ...state,\r\n      content: newContentArray,\r\n    }));\r\n  };\r\n  const updateTitle = (newTitle) => {\r\n    setBoxState((prevState) => {\r\n      return { ...prevState, title: newTitle };\r\n    });\r\n    console.log(\"Where\", boxState);\r\n  };\r\n\r\n\r\n\r\n  //User Create Box item\r\n  return (\r\n    <div onClick={handleClick} className={classList}>\r\n      {!isOpen && (\r\n        <>\r\n          <ThreeDotsMenu\r\n            onDel={() => {\r\n              deleteBox(boxState);\r\n            }}\r\n          />\r\n          <BoxTitle>{boxState.title}</BoxTitle>\r\n        </>\r\n      )}\r\n      {isOpen && (\r\n        <>\r\n          <button onClick={handleExit}>X</button>\r\n          <NoteText\r\n            key=\"title\"\r\n            contentType=\"title\"\r\n            content={{ text: boxState.title, boxId: boxState.boxId }}\r\n            updateTitle={updateTitle}\r\n          />\r\n          {boxState.content ? (\r\n            <div className={BoxItemCSS.contentContainer}>\r\n              {workingContentArray}\r\n              {isOpen && (\r\n                <ContentSelector\r\n                  createHeader={handleHeadingBtn}\r\n                  createText={handleTextBtn}\r\n                  cancelBtn={handleSelectorCancel}\r\n                />\r\n              )}\r\n              {newComponent}\r\n            </div>\r\n          ) : null}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport NewBoxPopUp from \"../NewBoxPopUp\";\r\nimport StorageBoxesContainerCSS from \"./StorageBoxesContainer.module.css\";\r\nimport BoxItemCSS from \"../BoxItem/BoxItem.module.css\";\r\nimport TestingInitLocalStorage from \"../TestingInitLocalStorage\";\r\nimport BoxItem from \"../BoxItem\";\r\nimport information from \"../../Information.json\";\r\n\r\nexport default function StorageBoxesContainer() {\r\n  //Shitty Name\r\n  const [boxesState, setBoxesState] = useState([]);\r\n  const [boxesComponentState, setBoxesComponentState] = useState([]);\r\n  const [renderAddNewPopUp, setRenderAddNewPopUp] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setStorageBoxes();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Change BoxState\");\r\n    getComponents();\r\n  }, [boxesState]);\r\n\r\n  const initLocalStorage = () => {\r\n    localStorage.setItem(\"StorageBoxes\", JSON.stringify(information));\r\n    setStorageBoxes();\r\n  };\r\n\r\n  const getComponents = () => {\r\n    if (boxesState !== null) {\r\n      const components = boxesState.map((box, i) => {\r\n        return (\r\n          <BoxItem key={box.boxId} content={box} deleteBox={handleBoxDelete} />\r\n        );\r\n      });\r\n      console.log(components);\r\n      setBoxesComponentState(components);\r\n    }\r\n  };\r\n  // const addStorageBoxToContainer\r\n  const handleAddStorageBtnClick = () => {\r\n    setRenderAddNewPopUp(true);\r\n  };\r\n\r\n  const handleExitPopUp = () => {\r\n    setRenderAddNewPopUp(false);\r\n  };\r\n  // Update Information Boxes State and local Storage\r\n  const setStorageBoxes = () => {\r\n    const array = JSON.parse(localStorage.getItem(\"StorageBoxes\"));\r\n\r\n    setBoxesState(array);\r\n    getComponents();\r\n  };\r\n\r\n  //Clear LocalStorage\r\n  const clearLocalStorage = () => {\r\n    localStorage.removeItem(\"StorageBoxes\");\r\n    setBoxesState([]);\r\n  };\r\n\r\n  const handleBoxDelete = (delBoxId) => {\r\n    // console.log(delBoxId);\r\n    //Handles DB interaction\r\n    // const storageBoxes = JSON.parse(localStorage.getItem(\"StorageBoxes\"));\r\n    const updatedStorageBoxes = boxesState.filter((box) => {\r\n      if (box.boxId === delBoxId.boxId) {\r\n        return;\r\n        // console.log(\"Box.BoxId if\", box.boxId);\r\n      } else {\r\n        // console.log(\"Box.BoxId else\", box.boxId);\r\n        return box;\r\n      }\r\n    });\r\n\r\n    setBoxesState(updatedStorageBoxes);\r\n    getComponents();\r\n\r\n    localStorage.setItem(\"StorageBoxes\", JSON.stringify(updatedStorageBoxes));\r\n  };\r\n\r\n  return (\r\n    <div className={StorageBoxesContainerCSS.container}>\r\n      {/* <div className={BoxItemCSS.storageBox}>\r\n        <TestingInitLocalStorage onInit={initLocalStorage} />\r\n      </div> */}\r\n      {/* Add Storage Box */}\r\n      <button onClick={handleAddStorageBtnClick}>\r\n        <div className={BoxItemCSS.storageBox}>\r\n          <div className={StorageBoxesContainerCSS.plus}>\r\n            <div className={StorageBoxesContainerCSS.verticalLine}></div>\r\n            <div className={StorageBoxesContainerCSS.horizontalLine}></div>\r\n          </div>\r\n        </div>\r\n      </button>\r\n      {renderAddNewPopUp && (\r\n        <NewBoxPopUp\r\n          onExitPopUp={handleExitPopUp}\r\n          onCreate={() => {\r\n            setStorageBoxes();\r\n            handleExitPopUp();\r\n          }}\r\n        />\r\n      )}\r\n      {/*Displays ALl the Stored Boxes ^^^*/}\r\n      {boxesComponentState}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport WelcomeHeader from \"../../components/WelcomeHeader\";\r\nimport StorageBoxesContainer from \"../../components/StorageBoxesContainer\";\r\n\r\n\r\nexport default function Home() {\r\n\r\n\r\n  return (\r\n    <>\r\n      <WelcomeHeader />\r\n      <StorageBoxesContainer />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route component={Home} exact path=\"/\" />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}